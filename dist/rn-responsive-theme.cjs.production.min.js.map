{"version":3,"file":"rn-responsive-theme.cjs.production.min.js","sources":["../src/providers/OrientationProvider.tsx","../src/hooks/useBackgroundHandler.ts","../src/hooks/useBasicInfo.ts","../src/utils/style.ts","../src/providers/BasicProvider.tsx","../src/providers/index.tsx","../src/hooks/useResponsive.ts","../src/hooks/useOrientation.ts","../src/utils/object.ts"],"sourcesContent":["import React, {\n  createContext,\n  useCallback,\n  useEffect,\n  useState,\n  ReactElement,\n} from 'react';\n\nimport Orientation from 'react-native-orientation-locker';\nimport { IProviderProps, IOrientationProvider } from './types';\n\nexport enum ORIENTATIONS {\n    PORTRAIT = 'portrait',\n    LANDSCAPE = 'landscape',\n    'PORTRAIT-UPSIDEDOWN'='portrait',\n    'LANDSCAPE-LEFT'='landscape',\n    'LANDSCAPE-RIGHT'='landscape'\n\n}\n\nexport const OrientationProviderDefaults: IOrientationProvider = {\n  currentOrientation: ORIENTATIONS.PORTRAIT,\n  lockOrientation() { },\n};\n\nexport const OrientationContext = createContext<IOrientationProvider>(\n  OrientationProviderDefaults\n);\n\nexport default function OrientationProvider({\n  children,\n}: IProviderProps): ReactElement {\n  const [currentOrientation, setOrientation] = useState(ORIENTATIONS.PORTRAIT);\n  const lockOrientation = useCallback(mode => {\n    if (!mode) return;\n    if (ORIENTATIONS[mode] === ORIENTATIONS.LANDSCAPE)\n      Orientation.lockToLandscape();\n    else if (ORIENTATIONS[mode] === ORIENTATIONS.PORTRAIT)\n      Orientation.lockToPortrait();\n  }, []);\n\n  const setOrientationListener = (newOrientation): void => {\n    if (newOrientation) setOrientation(ORIENTATIONS[newOrientation]);\n  };\n\n  useEffect(() => {\n    Orientation.getDeviceOrientation(setOrientationListener);\n    Orientation.addOrientationListener(setOrientationListener);\n    return Orientation.removeAllListeners();\n  }, []);\n\n  console.log({ currentOrientation });\n\n  return (\n    <OrientationContext.Provider\n      value={{\n        currentOrientation,\n        lockOrientation,\n      }}\n    >\n      {children}\n    </OrientationContext.Provider>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { AppState } from 'react-native';\n\nexport interface IUseBackgroundHandler {\n  onActive?: { (): void };\n  onBackground?: { (): void };\n}\n\nconst useBackgroundHandler = ({\n  onActive,\n  onBackground,\n}: IUseBackgroundHandler): void => {\n  const [appState, setAppState] = useState(AppState.currentState);\n  const handleAppStateChange = (nextAppState): void => {\n    if (\n      appState.match(/inactive|background/) &&\n      nextAppState === 'active' &&\n      !!onActive\n    ) {\n      onActive();\n    } else if (\n      appState.match(/inactive|active/) &&\n      nextAppState === 'background' &&\n      !!onBackground\n    ) {\n      onBackground();\n    }\n    setAppState(nextAppState);\n  };\n  useEffect(() => {\n    AppState.addEventListener('change', handleAppStateChange);\n\n    return (): void => {\n      AppState.removeEventListener('change', handleAppStateChange);\n    };\n  }, []);\n};\n\nexport default useBackgroundHandler;\n","import { useState, useEffect, useContext } from 'react';\nimport { useColorScheme, ColorSchemeName } from 'react-native';\nimport { BasicContext } from '../providers/BasicProvider';\n\nexport interface IBasicInfo {\n  '@web': boolean;\n  '@tablet': boolean;\n  '@xs': boolean;\n  '@android': boolean;\n  '@ios': boolean;\n  width: number;\n  height: number;\n  systemTheme: ColorSchemeName;\n}\n\nexport default function useBasicInfo(): IBasicInfo {\n  const { width, height, OS, isXs, isTablet } = useContext(BasicContext);\n  const systemTheme = useColorScheme() || 'light';\n  const [basicInfo, setBasicInfo] = useState<IBasicInfo>({\n    '@android': OS === 'android',\n    '@ios': OS === 'ios',\n    '@web': OS === 'web',\n    '@tablet': isTablet,\n    '@xs': isXs,\n    width,\n    height,\n    systemTheme,\n  });\n\n  useEffect(() => {\n    setBasicInfo({\n      '@android': OS === 'android',\n      '@ios': OS === 'ios',\n      '@web': OS === 'web',\n      '@tablet': isTablet,\n      '@xs': isXs,\n      width,\n      height,\n      systemTheme,\n    });\n  }, [width, height, OS, isXs, isTablet, systemTheme]);\n\n  return basicInfo;\n}\n","type CalcStyleResult = any;\ntype CalcListenersResult = string[];\n\nexport const calculateStyle = (style, themeState): CalcStyleResult => {\n  if (typeof style === 'string' && style[0] === '$') {\n    if (themeState.globalStyles[style]) return themeState.globalStyles[style];\n    return style;\n  }\n  if (typeof style !== 'object') {\n    return style;\n  }\n  let out = {};\n  const overrides: object[] = [];\n  Object.keys(style).forEach(key => {\n    if (key[0] === '$') {\n      overrides.push(calculateStyle(themeState.globalStyles[key], themeState));\n    } else if (key[0] !== '@') {\n      out[key] = calculateStyle(style[key], themeState);\n    } else if (themeState[key]) {\n      overrides.push(calculateStyle(style[key], themeState));\n    }\n  });\n  overrides.forEach(override => {\n    out = { ...out, ...override };\n  });\n  return out;\n};\n\nexport const getListeners = (style): CalcListenersResult => {\n  const res: CalcListenersResult = [];\n  Object.keys(style).forEach(key => {\n    if (key[0] === '@') {\n      res.push(key);\n    }\n    if (typeof style[key] === 'object') {\n      const subListeners = getListeners(style[key]);\n      subListeners.forEach(sl => {\n        if (res.indexOf(sl) === -1) res.push(sl);\n      });\n    }\n  });\n  return res;\n};\n","import React, {\n  createContext,\n  useCallback,\n  useEffect,\n  useState,\n  ReactElement,\n} from 'react';\nimport {Dimensions,PixelRatio,Platform} from 'react-native';\nimport {isTablet as isTabletInfo} from 'react-native-device-info';\nimport { IProviderProps, IBasicProvider } from './types';\nimport {useBackgroundHandler} from '../hooks';\n  \nconst { height:initHeight, width:initWidth } = Dimensions.get('window');\n\n\n  \nexport const BasicProviderDefaults: IBasicProvider = {\n  width:0,\n  height: 0,\n  OS:undefined,\n  isTablet:false,\n  isXs:false\n};\n  \nexport const BasicContext = createContext<IBasicProvider>(\n  BasicProviderDefaults\n);\n  \nexport default function BasicProvider({\n  children,\n}: IProviderProps): ReactElement {\n  const [height, setHeight] = useState<number>(initHeight);\n  const [width, setWidth] = useState<number>(initWidth);\n  const [OS] = useState<string>(Platform.OS);\n  const [isTablet] = useState<boolean>(isTabletInfo());\n  const [isXs, setIsXs] = useState<boolean>(false);\n\n\n  const calcValues = ():void=>{\n    const { height:newHeight, width:newWidth } = Dimensions.get('window');\n    if(newHeight!==height)setHeight(newHeight);\n    if(newWidth!==width)setWidth(newWidth);\n  };\n\n  useBackgroundHandler({onActive:calcValues, onBackground:calcValues});\n  \n  useEffect(() => {\n    const density = PixelRatio.get();\n    if(height * density < 1200)setIsXs(true);\n  }, [height]);\n  \n  useEffect(() => {\n    calcValues();\n  }, []);\n  \n  \n  return (\n    <BasicContext.Provider\n      value={{\n        height, width, OS, isTablet, isXs\n      }}\n    >\n      {children}\n    </BasicContext.Provider>\n  );\n}\n  ","import React,{ReactElement} from 'react';\nimport OrientationProvider from './OrientationProvider';\nimport BasicProvider from './BasicProvider';\nimport { IProviderProps } from './types';\n\n\nexport default function ThemeProvider({ children }: IProviderProps):ReactElement {\n  return (\n    <BasicProvider>\n      <OrientationProvider>\n        {children}\n      </OrientationProvider>\n    </BasicProvider>\n  );\n}\n","import { useEffect, useRef, useState } from 'react';\nimport { ImageStyle, StyleSheet, TextStyle, ViewStyle } from 'react-native';\nimport useBasicInfo, { IBasicInfo } from './useBasicInfo';\nimport useOrientation, { IOrientationInfo } from './useOrientation';\nimport { isEqual, calculateStyle } from '../utils';\n\ntype NamedStyles<T> = { [P in keyof T]: ViewStyle | TextStyle | ImageStyle };\n\ninterface IResponsiveState extends IBasicInfo, IOrientationInfo {}\n\nconst useResponsive = (style: object): NamedStyles<any> => {\n  console.log('useResponsive start...');\n  const basicInfo = useBasicInfo();\n  const orientation = useOrientation();\n  const [themeState, setThemeState] = useState<IResponsiveState>({\n    ...basicInfo,\n    ...orientation,\n  });\n  const [currentStyle, setCurrentStyle] = useState(null);\n\n  /* useEffect(\n    () => {\n      // we use promise, because it is not a priority to subscribe\n      async function subscribe() {\n        // on first run we calculate style and extract listeners we want to listen to\n        const listeners = getListeners(style);\n        // Theme will notify us only when the listener state changes and set new state\n        Theme.notifyOnChange(listeners, setThemeState);\n      }\n      subscribe();\n    },\n    // eslint-disable-next-line\n      [],\n  ); */\n\n  // Use deep compare of the style object to prevent infinite renders\n  const previousStyleRef = useRef(style);\n  //   const previousStyle = previousStyleRef.current;\n\n  useEffect(() => {\n    // const newStyle = StyleSheet.create(calculateStyle(style, themeState));\n    const isStyleEqual = isEqual(previousStyleRef.current, style);\n    console.log({ isStyleEqual, style, ref: previousStyleRef.current });\n    if (!isStyleEqual) {\n      setCurrentStyle(StyleSheet.create(calculateStyle(style, themeState)));\n      previousStyleRef.current = style;\n    }\n  }, [/* themeState,  */ style /* , previousStyleRef.current */]);\n\n  // Return the calculated styles on the first render\n  return currentStyle || StyleSheet.create(calculateStyle(style, themeState));\n};\n\nexport default useResponsive;\n","import { useContext } from 'react';\nimport {\n  OrientationContext,\n  ORIENTATIONS,\n} from '../providers/OrientationProvider';\n\nexport interface IOrientationInfo {\n  orientation?: string;\n  '@landscape': boolean;\n  '@portrait': boolean;\n}\n\nexport default function useOrientation(): IOrientationInfo {\n  const { currentOrientation } = useContext(OrientationContext);\n\n  return {\n    orientation: currentOrientation,\n    '@landscape': currentOrientation === ORIENTATIONS.LANDSCAPE,\n    '@portrait': currentOrientation === ORIENTATIONS.PORTRAIT,\n  };\n}\n","/* eslint-disable import/prefer-default-export */\nexport const isEqual = (a: object = {}, b: object = {}): boolean =>\n  JSON.stringify(a) === JSON.stringify(b);\n"],"names":["ORIENTATIONS","OrientationContext","createContext","currentOrientation","PORTRAIT","lockOrientation","OrientationProvider","children","useState","setOrientation","useCallback","mode","LANDSCAPE","Orientation","lockToLandscape","lockToPortrait","setOrientationListener","newOrientation","useEffect","getDeviceOrientation","addOrientationListener","removeAllListeners","console","log","React","Provider","value","useBackgroundHandler","onActive","onBackground","AppState","currentState","appState","setAppState","handleAppStateChange","nextAppState","match","addEventListener","removeEventListener","useBasicInfo","useContext","BasicContext","width","height","OS","isXs","isTablet","systemTheme","useColorScheme","basicInfo","setBasicInfo","calculateStyle","style","themeState","globalStyles","out","overrides","Object","keys","forEach","key","push","override","Dimensions","get","initHeight","initWidth","undefined","BasicProvider","setHeight","setWidth","Platform","isTabletInfo","setIsXs","calcValues","newHeight","newWidth","density","PixelRatio","orientation","currentStyle","setCurrentStyle","previousStyleRef","useRef","a","b","isStyleEqual","current","JSON","stringify","ref","StyleSheet","create"],"mappings":"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"}