{"version":3,"file":"rn-responsive-theme.esm.js","sources":["../src/providers/OrientationProvider.tsx","../src/hooks/useBackgroundHandler.ts","../src/hooks/useBasicInfo.ts","../src/hooks/useOrientation.ts","../src/utils/style.ts","../src/utils/object.ts","../src/hooks/useResponsive.ts","../src/providers/BasicProvider.tsx","../src/providers/index.tsx"],"sourcesContent":["import React, {\n  createContext,\n  useCallback,\n  useEffect,\n  useState,\n  ReactElement,\n} from 'react';\n\nimport Orientation from 'react-native-orientation-locker';\nimport { IProviderProps, IOrientationProvider } from './types';\n\nexport enum ORIENTATIONS {\n    PORTRAIT = 'portrait',\n    LANDSCAPE = 'landscape',\n    'PORTRAIT-UPSIDEDOWN'='portrait',\n    'LANDSCAPE-LEFT'='landscape',\n    'LANDSCAPE-RIGHT'='landscape'\n\n}\n\nexport const OrientationProviderDefaults: IOrientationProvider = {\n  currentOrientation: ORIENTATIONS.PORTRAIT,\n  lockOrientation() { },\n};\n\nexport const OrientationContext = createContext<IOrientationProvider>(\n  OrientationProviderDefaults\n);\n\nexport default function OrientationProvider({\n  children,\n}: IProviderProps): ReactElement {\n  const [currentOrientation, setOrientation] = useState(ORIENTATIONS.PORTRAIT);\n  const lockOrientation = useCallback(mode => {\n    if (!mode) return;\n    if (ORIENTATIONS[mode] === ORIENTATIONS.LANDSCAPE)\n      Orientation.lockToLandscape();\n    else if (ORIENTATIONS[mode] === ORIENTATIONS.PORTRAIT)\n      Orientation.lockToPortrait();\n  }, []);\n\n  const setOrientationListener = (newOrientation): void => {\n    if (newOrientation) setOrientation(ORIENTATIONS[newOrientation]);\n  };\n\n  useEffect(() => {\n    Orientation.getDeviceOrientation(setOrientationListener);\n    Orientation.addOrientationListener(setOrientationListener);\n    return Orientation.removeAllListeners();\n  }, []);\n\n  console.log({ currentOrientation });\n\n  return (\n    <OrientationContext.Provider\n      value={{\n        currentOrientation,\n        lockOrientation,\n      }}\n    >\n      {children}\n    </OrientationContext.Provider>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { AppState } from 'react-native';\n\nexport interface IUseBackgroundHandler {\n  onActive?: { (): void };\n  onBackground?: { (): void };\n}\n\nconst useBackgroundHandler = ({\n  onActive,\n  onBackground,\n}: IUseBackgroundHandler): void => {\n  const [appState, setAppState] = useState(AppState.currentState);\n  const handleAppStateChange = (nextAppState): void => {\n    if (\n      appState.match(/inactive|background/) &&\n      nextAppState === 'active' &&\n      !!onActive\n    ) {\n      onActive();\n    } else if (\n      appState.match(/inactive|active/) &&\n      nextAppState === 'background' &&\n      !!onBackground\n    ) {\n      onBackground();\n    }\n    setAppState(nextAppState);\n  };\n  useEffect(() => {\n    AppState.addEventListener('change', handleAppStateChange);\n\n    return (): void => {\n      AppState.removeEventListener('change', handleAppStateChange);\n    };\n  }, []);\n};\n\nexport default useBackgroundHandler;\n","import { useState, useEffect, useContext } from 'react';\nimport { useColorScheme, ColorSchemeName } from 'react-native';\nimport { BasicContext } from '../providers/BasicProvider';\n\nexport interface IBasicInfo {\n  '@web': boolean;\n  '@tablet': boolean;\n  '@xs': boolean;\n  '@android': boolean;\n  '@ios': boolean;\n  width: number;\n  height: number;\n  systemTheme: ColorSchemeName;\n}\n\nexport default function useBasicInfo(): IBasicInfo {\n  const { width, height, OS, isXs, isTablet } = useContext(BasicContext);\n  const systemTheme = useColorScheme() || 'light';\n  const [basicInfo, setBasicInfo] = useState<IBasicInfo>({\n    '@android': OS === 'android',\n    '@ios': OS === 'ios',\n    '@web': OS === 'web',\n    '@tablet': isTablet,\n    '@xs': isXs,\n    width,\n    height,\n    systemTheme,\n  });\n\n  useEffect(() => {\n    setBasicInfo({\n      '@android': OS === 'android',\n      '@ios': OS === 'ios',\n      '@web': OS === 'web',\n      '@tablet': isTablet,\n      '@xs': isXs,\n      width,\n      height,\n      systemTheme,\n    });\n  }, [width, height, OS, isXs, isTablet, systemTheme]);\n\n  return basicInfo;\n}\n","import { useContext } from 'react';\nimport {\n  OrientationContext,\n  ORIENTATIONS,\n} from '../providers/OrientationProvider';\n\nexport interface IOrientationInfo {\n  orientation?: string;\n  '@landscape': boolean;\n  '@portrait': boolean;\n}\n\nexport default function useOrientation(): IOrientationInfo {\n  const { currentOrientation } = useContext(OrientationContext);\n\n  return {\n    orientation: currentOrientation,\n    '@landscape': currentOrientation === ORIENTATIONS.LANDSCAPE,\n    '@portrait': currentOrientation === ORIENTATIONS.PORTRAIT,\n  };\n}\n","type CalcStyleResult = any;\ntype CalcListenersResult = string[];\n\nexport const calculateStyle = (style, themeState): CalcStyleResult => {\n  if (typeof style === 'string' && style[0] === '$') {\n    if (themeState.globalStyles[style]) return themeState.globalStyles[style];\n    return style;\n  }\n  if (typeof style !== 'object') {\n    return style;\n  }\n  let out = {};\n  const overrides: object[] = [];\n  Object.keys(style).forEach(key => {\n    if (key[0] === '$') {\n      overrides.push(calculateStyle(themeState.globalStyles[key], themeState));\n    } else if (key[0] !== '@') {\n      out[key] = calculateStyle(style[key], themeState);\n    } else if (themeState[key]) {\n      overrides.push(calculateStyle(style[key], themeState));\n    }\n  });\n  overrides.forEach(override => {\n    out = { ...out, ...override };\n  });\n  return out;\n};\n\nexport const getListeners = (style): CalcListenersResult => {\n  const res: CalcListenersResult = [];\n  Object.keys(style).forEach(key => {\n    if (key[0] === '@') {\n      res.push(key);\n    }\n    if (typeof style[key] === 'object') {\n      const subListeners = getListeners(style[key]);\n      subListeners.forEach(sl => {\n        if (res.indexOf(sl) === -1) res.push(sl);\n      });\n    }\n  });\n  return res;\n};\n","/* eslint-disable import/prefer-default-export */\nexport const isEqual = (a: object = {}, b: object = {}): boolean =>\n  JSON.stringify(a) === JSON.stringify(b);\n","import { useEffect, useRef, useState } from 'react';\nimport { ImageStyle, StyleSheet, TextStyle, ViewStyle } from 'react-native';\nimport useBasicInfo, { IBasicInfo } from './useBasicInfo';\nimport useOrientation, { IOrientationInfo } from './useOrientation';\nimport { isEqual, calculateStyle } from '../utils';\n\ntype NamedStyles<T> = { [P in keyof T]: ViewStyle | TextStyle | ImageStyle };\n\ninterface IResponsiveState extends IBasicInfo, IOrientationInfo {}\n\nconst useResponsive = (style: object): NamedStyles<any> => {\n  console.log('useResponsive start...');\n  const basicInfo = useBasicInfo();\n  const orientation = useOrientation();\n  const [themeState, setThemeState] = useState<IResponsiveState>({\n    ...basicInfo,\n    ...orientation,\n  });\n  const [currentStyle, setCurrentStyle] = useState(null);\n\n  /* useEffect(\n    () => {\n      // we use promise, because it is not a priority to subscribe\n      async function subscribe() {\n        // on first run we calculate style and extract listeners we want to listen to\n        const listeners = getListeners(style);\n        // Theme will notify us only when the listener state changes and set new state\n        Theme.notifyOnChange(listeners, setThemeState);\n      }\n      subscribe();\n    },\n    // eslint-disable-next-line\n      [],\n  ); */\n\n  // Use deep compare of the style object to prevent infinite renders\n  const previousStyleRef = useRef(style);\n  //   const previousStyle = previousStyleRef.current;\n\n  useEffect(() => {\n    // const newStyle = StyleSheet.create(calculateStyle(style, themeState));\n    const isStyleEqual = isEqual(previousStyleRef.current, style);\n    console.log({ isStyleEqual, style, ref: previousStyleRef.current });\n    if (!isStyleEqual) {\n      setCurrentStyle(StyleSheet.create(calculateStyle(style, themeState)));\n      previousStyleRef.current = style;\n    }\n  }, [/* themeState,  */ style /* , previousStyleRef.current */]);\n\n  // Return the calculated styles on the first render\n  return currentStyle || StyleSheet.create(calculateStyle(style, themeState));\n};\n\nexport default useResponsive;\n","import React, {\n  createContext,\n  useCallback,\n  useEffect,\n  useState,\n  ReactElement,\n} from 'react';\nimport {Dimensions,PixelRatio,Platform} from 'react-native';\nimport {isTablet as isTabletInfo} from 'react-native-device-info';\nimport { IProviderProps, IBasicProvider } from './types';\nimport {useBackgroundHandler} from '../hooks';\n  \nconst { height:initHeight, width:initWidth } = Dimensions.get('window');\n\n\n  \nexport const BasicProviderDefaults: IBasicProvider = {\n  width:0,\n  height: 0,\n  OS:undefined,\n  isTablet:false,\n  isXs:false\n};\n  \nexport const BasicContext = createContext<IBasicProvider>(\n  BasicProviderDefaults\n);\n  \nexport default function BasicProvider({\n  children,\n}: IProviderProps): ReactElement {\n  const [height, setHeight] = useState<number>(initHeight);\n  const [width, setWidth] = useState<number>(initWidth);\n  const [OS] = useState<string>(Platform.OS);\n  const [isTablet] = useState<boolean>(isTabletInfo());\n  const [isXs, setIsXs] = useState<boolean>(false);\n\n\n  const calcValues = ():void=>{\n    const { height:newHeight, width:newWidth } = Dimensions.get('window');\n    if(newHeight!==height)setHeight(newHeight);\n    if(newWidth!==width)setWidth(newWidth);\n  };\n\n  useBackgroundHandler({onActive:calcValues, onBackground:calcValues});\n  \n  useEffect(() => {\n    const density = PixelRatio.get();\n    if(height * density < 1200)setIsXs(true);\n  }, [height]);\n  \n  useEffect(() => {\n    calcValues();\n  }, []);\n  \n  \n  return (\n    <BasicContext.Provider\n      value={{\n        height, width, OS, isTablet, isXs\n      }}\n    >\n      {children}\n    </BasicContext.Provider>\n  );\n}\n  ","import React,{ReactElement} from 'react';\nimport OrientationProvider from './OrientationProvider';\nimport BasicProvider from './BasicProvider';\nimport { IProviderProps } from './types';\n\n\nexport default function ThemeProvider({ children }: IProviderProps):ReactElement {\n  return (\n    <BasicProvider>\n      <OrientationProvider>\n        {children}\n      </OrientationProvider>\n    </BasicProvider>\n  );\n}\n"],"names":["ORIENTATIONS","OrientationProviderDefaults","currentOrientation","PORTRAIT","lockOrientation","OrientationContext","createContext","OrientationProvider","children","useState","setOrientation","useCallback","mode","LANDSCAPE","Orientation","lockToLandscape","lockToPortrait","setOrientationListener","newOrientation","useEffect","getDeviceOrientation","addOrientationListener","removeAllListeners","console","log","React","Provider","value","useBackgroundHandler","onActive","onBackground","AppState","currentState","appState","setAppState","handleAppStateChange","nextAppState","match","addEventListener","removeEventListener","useBasicInfo","useContext","BasicContext","width","height","OS","isXs","isTablet","systemTheme","useColorScheme","basicInfo","setBasicInfo","useOrientation","orientation","calculateStyle","style","themeState","globalStyles","out","overrides","Object","keys","forEach","key","push","override","isEqual","a","b","JSON","stringify","useResponsive","currentStyle","setCurrentStyle","previousStyleRef","useRef","isStyleEqual","current","ref","StyleSheet","create","Dimensions","get","initHeight","initWidth","BasicProviderDefaults","undefined","BasicProvider","setHeight","setWidth","Platform","isTabletInfo","setIsXs","calcValues","newHeight","newWidth","density","PixelRatio","ThemeProvider"],"mappings":";;;;;AAWA,IAAYA,YAAZ;;AAAA,WAAYA;AACRA,EAAAA,wBAAA,aAAA;AACAA,EAAAA,yBAAA,cAAA;AACAA,EAAAA,mCAAA,aAAA;AACAA,EAAAA,8BAAA,cAAA;AACAA,EAAAA,+BAAA,cAAA;AAEH,CAPD,EAAYA,YAAY,KAAZA,YAAY,KAAA,CAAxB;;AASO,IAAMC,2BAA2B,GAAyB;AAC/DC,EAAAA,kBAAkB,EAAEF,YAAY,CAACG,QAD8B;AAE/DC,EAAAA,eAF+D;AAAA,CAA1D;AAKA,IAAMC,kBAAkB,gBAAGC,aAAa,CAC7CL,2BAD6C,CAAxC;SAIiBM;MACtBC,gBAAAA;;kBAE6CC,QAAQ,CAACT,YAAY,CAACG,QAAd;MAA9CD;MAAoBQ;;AAC3B,MAAMN,eAAe,GAAGO,WAAW,CAAC,UAAAC,IAAI;AACtC,QAAI,CAACA,IAAL,EAAW;AACX,QAAIZ,YAAY,CAACY,IAAD,CAAZ,KAAuBZ,YAAY,CAACa,SAAxC,EACEC,WAAW,CAACC,eAAZ,GADF,KAEK,IAAIf,YAAY,CAACY,IAAD,CAAZ,KAAuBZ,YAAY,CAACG,QAAxC,EACHW,WAAW,CAACE,cAAZ;AACH,GANkC,EAMhC,EANgC,CAAnC;;AAQA,MAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,cAAD;AAC7B,QAAIA,cAAJ,EAAoBR,cAAc,CAACV,YAAY,CAACkB,cAAD,CAAb,CAAd;AACrB,GAFD;;AAIAC,EAAAA,SAAS,CAAC;AACRL,IAAAA,WAAW,CAACM,oBAAZ,CAAiCH,sBAAjC;AACAH,IAAAA,WAAW,CAACO,sBAAZ,CAAmCJ,sBAAnC;AACA,WAAOH,WAAW,CAACQ,kBAAZ,EAAP;AACD,GAJQ,EAIN,EAJM,CAAT;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEtB,IAAAA,kBAAkB,EAAlBA;AAAF,GAAZ;AAEA,SACEuB,mBAAA,CAACpB,kBAAkB,CAACqB,QAApB;AACEC,IAAAA,KAAK,EAAE;AACLzB,MAAAA,kBAAkB,EAAlBA,kBADK;AAELE,MAAAA,eAAe,EAAfA;AAFK;GADT,EAMGI,QANH,CADF;AAUD;;ACvDD,IAAMoB,oBAAoB,GAAG,SAAvBA,oBAAuB;MAC3BC,gBAAAA;MACAC,oBAAAA;;kBAEgCrB,QAAQ,CAACsB,QAAQ,CAACC,YAAV;MAAjCC;MAAUC;;AACjB,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,YAAD;AAC3B,QACEH,QAAQ,CAACI,KAAT,CAAe,qBAAf,KACAD,YAAY,KAAK,QADjB,IAEA,CAAC,CAACP,QAHJ,EAIE;AACAA,MAAAA,QAAQ;AACT,KAND,MAMO,IACLI,QAAQ,CAACI,KAAT,CAAe,iBAAf,KACAD,YAAY,KAAK,YADjB,IAEA,CAAC,CAACN,YAHG,EAIL;AACAA,MAAAA,YAAY;AACb;;AACDI,IAAAA,WAAW,CAACE,YAAD,CAAX;AACD,GAfD;;AAgBAjB,EAAAA,SAAS,CAAC;AACRY,IAAAA,QAAQ,CAACO,gBAAT,CAA0B,QAA1B,EAAoCH,oBAApC;AAEA,WAAO;AACLJ,MAAAA,QAAQ,CAACQ,mBAAT,CAA6B,QAA7B,EAAuCJ,oBAAvC;AACD,KAFD;AAGD,GANQ,EAMN,EANM,CAAT;AAOD,CA5BD;;SCOwBK;oBACwBC,UAAU,CAACC,YAAD;MAAhDC,oBAAAA;MAAOC,qBAAAA;MAAQC,iBAAAA;MAAIC,mBAAAA;MAAMC,uBAAAA;;AACjC,MAAMC,WAAW,GAAGC,cAAc,MAAM,OAAxC;;kBACkCxC,QAAQ,CAAa;AACrD,gBAAYoC,EAAE,KAAK,SADkC;AAErD,YAAQA,EAAE,KAAK,KAFsC;AAGrD,YAAQA,EAAE,KAAK,KAHsC;AAIrD,eAAWE,QAJ0C;AAKrD,WAAOD,IAL8C;AAMrDH,IAAAA,KAAK,EAALA,KANqD;AAOrDC,IAAAA,MAAM,EAANA,MAPqD;AAQrDI,IAAAA,WAAW,EAAXA;AARqD,GAAb;MAAnCE;MAAWC;;AAWlBhC,EAAAA,SAAS,CAAC;AACRgC,IAAAA,YAAY,CAAC;AACX,kBAAYN,EAAE,KAAK,SADR;AAEX,cAAQA,EAAE,KAAK,KAFJ;AAGX,cAAQA,EAAE,KAAK,KAHJ;AAIX,iBAAWE,QAJA;AAKX,aAAOD,IALI;AAMXH,MAAAA,KAAK,EAALA,KANW;AAOXC,MAAAA,MAAM,EAANA,MAPW;AAQXI,MAAAA,WAAW,EAAXA;AARW,KAAD,CAAZ;AAUD,GAXQ,EAWN,CAACL,KAAD,EAAQC,MAAR,EAAgBC,EAAhB,EAAoBC,IAApB,EAA0BC,QAA1B,EAAoCC,WAApC,CAXM,CAAT;AAaA,SAAOE,SAAP;AACD;;;;;;;;;;;;;;;;;;;;SC/BuBE;oBACSX,UAAU,CAACpC,kBAAD;MAAjCH,iCAAAA;;AAER,SAAO;AACLmD,IAAAA,WAAW,EAAEnD,kBADR;AAEL,kBAAcA,kBAAkB,KAAKF,YAAY,CAACa,SAF7C;AAGL,iBAAaX,kBAAkB,KAAKF,YAAY,CAACG;AAH5C,GAAP;AAKD;;ACjBM,IAAMmD,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAQC,UAAR;AAC5B,MAAI,OAAOD,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAAC,CAAD,CAAL,KAAa,GAA9C,EAAmD;AACjD,QAAIC,UAAU,CAACC,YAAX,CAAwBF,KAAxB,CAAJ,EAAoC,OAAOC,UAAU,CAACC,YAAX,CAAwBF,KAAxB,CAAP;AACpC,WAAOA,KAAP;AACD;;AACD,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,WAAOA,KAAP;AACD;;AACD,MAAIG,GAAG,GAAG,EAAV;AACA,MAAMC,SAAS,GAAa,EAA5B;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYN,KAAZ,EAAmBO,OAAnB,CAA2B,UAAAC,GAAG;AAC5B,QAAIA,GAAG,CAAC,CAAD,CAAH,KAAW,GAAf,EAAoB;AAClBJ,MAAAA,SAAS,CAACK,IAAV,CAAeV,cAAc,CAACE,UAAU,CAACC,YAAX,CAAwBM,GAAxB,CAAD,EAA+BP,UAA/B,CAA7B;AACD,KAFD,MAEO,IAAIO,GAAG,CAAC,CAAD,CAAH,KAAW,GAAf,EAAoB;AACzBL,MAAAA,GAAG,CAACK,GAAD,CAAH,GAAWT,cAAc,CAACC,KAAK,CAACQ,GAAD,CAAN,EAAaP,UAAb,CAAzB;AACD,KAFM,MAEA,IAAIA,UAAU,CAACO,GAAD,CAAd,EAAqB;AAC1BJ,MAAAA,SAAS,CAACK,IAAV,CAAeV,cAAc,CAACC,KAAK,CAACQ,GAAD,CAAN,EAAaP,UAAb,CAA7B;AACD;AACF,GARD;AASAG,EAAAA,SAAS,CAACG,OAAV,CAAkB,UAAAG,QAAQ;AACxBP,IAAAA,GAAG,gBAAQA,GAAR,EAAgBO,QAAhB,CAAH;AACD,GAFD;AAGA,SAAOP,GAAP;AACD,CAvBM;;ACFA,IAAMQ,OAAO,GAAG,SAAVA,OAAU,CAACC,CAAD,EAAiBC,CAAjB;AAAA,MAACD,CAAD;AAACA,IAAAA,CAAD,GAAa,EAAb;AAAA;;AAAA,MAAiBC,CAAjB;AAAiBA,IAAAA,CAAjB,GAA6B,EAA7B;AAAA;;AAAA,SACrBC,IAAI,CAACC,SAAL,CAAeH,CAAf,MAAsBE,IAAI,CAACC,SAAL,CAAeF,CAAf,CADD;AAAA,CAAhB;;ACSP,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,CAAChB,KAAD;AACpBhC,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA,MAAM0B,SAAS,GAAGV,YAAY,EAA9B;AACA,MAAMa,WAAW,GAAGD,cAAc,EAAlC;;kBACoC3C,QAAQ,cACvCyC,SADuC,EAEvCG,WAFuC;MAArCG;;mBAIiC/C,QAAQ,CAAC,IAAD;MAAzC+D;MAAcC;;AAkBrB,MAAMC,gBAAgB,GAAGC,MAAM,CAACpB,KAAD,CAA/B;AAGApC,EAAAA,SAAS,CAAC;AAER,QAAMyD,YAAY,GAAGV,OAAO,CAACQ,gBAAgB,CAACG,OAAlB,EAA2BtB,KAA3B,CAA5B;AACAhC,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEoD,MAAAA,YAAY,EAAZA,YAAF;AAAgBrB,MAAAA,KAAK,EAALA,KAAhB;AAAuBuB,MAAAA,GAAG,EAAEJ,gBAAgB,CAACG;AAA7C,KAAZ;;AACA,QAAI,CAACD,YAAL,EAAmB;AACjBH,MAAAA,eAAe,CAACM,UAAU,CAACC,MAAX,CAAkB1B,cAAc,CAACC,KAAD,EAAQC,UAAR,CAAhC,CAAD,CAAf;AACAkB,MAAAA,gBAAgB,CAACG,OAAjB,GAA2BtB,KAA3B;AACD;AACF,GARQ,EAQN,CAAoBA,KAApB,CARM,CAAT;AAWA,SAAOiB,YAAY,IAAIO,UAAU,CAACC,MAAX,CAAkB1B,cAAc,CAACC,KAAD,EAAQC,UAAR,CAAhC,CAAvB;AACD,CAzCD;;mCCE+CyB,UAAU,CAACC,GAAX,CAAe,QAAf;IAAhCC,6BAAPvC;IAAyBwC,4BAANzC;;AAI3B,AAAO,IAAM0C,qBAAqB,GAAmB;AACnD1C,EAAAA,KAAK,EAAC,CAD6C;AAEnDC,EAAAA,MAAM,EAAE,CAF2C;AAGnDC,EAAAA,EAAE,EAACyC,SAHgD;AAInDvC,EAAAA,QAAQ,EAAC,KAJ0C;AAKnDD,EAAAA,IAAI,EAAC;AAL8C,CAA9C;AAQP,AAAO,IAAMJ,YAAY,gBAAGpC,aAAa,CACvC+E,qBADuC,CAAlC;AAIP,SAAwBE;MACtB/E,gBAAAA;;kBAE4BC,QAAQ,CAAS0E,UAAT;MAA7BvC;MAAQ4C;;mBACW/E,QAAQ,CAAS2E,SAAT;MAA3BzC;MAAO8C;;mBACDhF,QAAQ,CAASiF,QAAQ,CAAC7C,EAAlB;MAAdA;;mBACYpC,QAAQ,CAAUkF,QAAY,EAAtB;MAApB5C;;mBACiBtC,QAAQ,CAAU,KAAV;MAAzBqC;MAAM8C;;AAGb,MAAMC,UAAU,GAAG,SAAbA,UAAa;2BAC4BZ,UAAU,CAACC,GAAX,CAAe,QAAf;QAA9BY,6BAAPlD;QAAwBmD,4BAANpD;;AAC1B,QAAGmD,SAAS,KAAGlD,MAAf,EAAsB4C,SAAS,CAACM,SAAD,CAAT;AACtB,QAAGC,QAAQ,KAAGpD,KAAd,EAAoB8C,QAAQ,CAACM,QAAD,CAAR;AACrB,GAJD;;AAMAnE,EAAAA,oBAAoB,CAAC;AAACC,IAAAA,QAAQ,EAACgE,UAAV;AAAsB/D,IAAAA,YAAY,EAAC+D;AAAnC,GAAD,CAApB;AAEA1E,EAAAA,SAAS,CAAC;AACR,QAAM6E,OAAO,GAAGC,UAAU,CAACf,GAAX,EAAhB;AACA,QAAGtC,MAAM,GAAGoD,OAAT,GAAmB,IAAtB,EAA2BJ,OAAO,CAAC,IAAD,CAAP;AAC5B,GAHQ,EAGN,CAAChD,MAAD,CAHM,CAAT;AAKAzB,EAAAA,SAAS,CAAC;AACR0E,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;AAKA,SACEpE,mBAAA,CAACiB,YAAY,CAAChB,QAAd;AACEC,IAAAA,KAAK,EAAE;AACLiB,MAAAA,MAAM,EAANA,MADK;AACGD,MAAAA,KAAK,EAALA,KADH;AACUE,MAAAA,EAAE,EAAFA,EADV;AACcE,MAAAA,QAAQ,EAARA,UADd;AACwBD,MAAAA,IAAI,EAAJA;AADxB;GADT,EAKGtC,QALH,CADF;AASD;;SC3DuB0F;MAAgB1F,gBAAAA;AACtC,SACEiB,mBAAA,CAAC8D,aAAD,MAAA,EACE9D,mBAAA,CAAClB,mBAAD,MAAA,EACGC,QADH,CADF,CADF;AAOD;;;;;"}